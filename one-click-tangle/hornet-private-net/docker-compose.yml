version: "3"

networks:
  tangle:
    name: private-tangle
services:
  coo:
    hostname: coo
    # network_mode: host
    networks:
      - tangle
    image: gohornet/hornet
#    restart: always
    container_name: coo
    environment:
      COO_SEED:
    expose:
      - 15600
    volumes:
      - ./config/config-coo.json:/app/config.json:ro
      - ./config/profiles.json:/app/profiles.json:ro
      - ./config/peering-coo.json:/app/peering.json:ro
      - ./db/private-tangle:/app/db
      - ./snapshots:/app/snapshots
  
  node:
    hostname: node1
    # network_mode: host
    networks:
      - tangle
    image: gohornet/hornet
#    restart: always
    container_name: node1
    environment:
      COO_SEED:
    expose:
      - 14265
      - 15600
      - 5556
    ports:
      - "14265:14265"
      - "15600:15600"
      - "8081:8081"
      - "5556:5556"
    volumes:
      - ./config/config-node.json:/app/config.json:ro
      - ./config/profiles.json:/app/profiles.json
      - ./config/peering-node.json:/app/peering.json
      - ./db/private-tangle:/app/db
      - ./snapshots:/app/snapshots
  


  nginx:
      # network_mode: host
      networks:
        - tangle
      image: nginx
      container_name: nginx
      expose: 
        - 80
      ports:
        - 9000:80
      volumes: 
        - ./logs:/usr/share/nginx/html

  address-generator:
    networks:
      - tangle
    image: node:12
    container_name: address-generator
    environment: 
      NPM_CONFIG_LOGLEVEL: silent
      NODE_PATH: /package/node_modules
    volumes:
      - ./utils:/usr/src/app
  secnode:
    hostname: node2
    # network_mode: host
    networks:
      - tangle
    image: gohornet/hornet
  #     restart: always
    container_name: node2
    environment:
      COO_SEED:
    expose:
      - 14268
      - 15600
      - 5558
    ports:
      - "14268:14268"
      - "8088:8088"
      - "5558:5558"
    volumes:
      - ./config/config-secnode.json:/app/config.json:ro
      - ./config/profiles.json:/app/profiles.json
      - ./config/peering-secnode.json:/app/peering.json
      - ./db/private-tangle:/app/db
      - ./snapshots:/app/snapshots
  thirdnode:
    hostname: node3
    # network_mode: host
    networks:
      - tangle
    image: gohornet/hornet
  #     restart: always
    container_name: node3
    environment:
      COO_SEED:
    expose:
      - 14267
      - 15600
      - 5557
    ports:
      - "14267:14267"
      - "8087:8087"
      - "5557:5557"
    volumes:
      - ./config/config-thirdnode.json:/app/config.json:ro
      - ./config/profiles.json:/app/profiles.json
      - ./config/peering-thirdnode.json:/app/peering.json
      - ./db/private-tangle:/app/db
      - ./snapshots:/app/snapshots

  db:
    image: postgres
    container_name: db
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  web:
    build: .
    command : bash -c 
              "
              python manage.py migrate --setting=config.settings.local 
              && python manage.py makemigrations --setting=config.settings.local 
              && python manage.py crontab add --setting=config.settings.local
              && python manage.py crontab show --setting=config.settings.local 
              && python manage.py runserver --setting=config.settings.local 0.0.0.0:8000
              "
    volumes:
      - ../../:/code
    ports:
      - "8000:8000"
    depends_on:
      - db
    